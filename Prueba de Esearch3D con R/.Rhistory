library(installr)
library(installr)
install.packages("installr", dependencies = TRUE)
library(installr)
updateR()
updateR()
warnings()
1+1
devtools::install_github(
repo="InfOmics/Esearch3D",
ref = "main",
dependencies = "Depends",
upgrade = "always",
quiet = T
type = "binary" usable only in Windows OS
install.packages("devtools")
install.packages("htmltools", version="0.5.2", type="source")
devtools::install_github(
repo="InfOmics/Esearch3D",
ref = "main",
dependencies = "Depends",
upgrade = "always",
quiet = T
type = "binary" usable only in Windows OS
library(Esearch3D)
install.packages("devtools")
install.packages("htmltools", version="0.5.2", type="source")
devtools::install_github(
repo="InfOmics/Esearch3D",
ref = "main",
dependencies = "Depends",
upgrade = "always",
quiet = T
type = "binary" usable only in Windows OS
install.packages("devtools")
install.packages("htmltools", version="0.5.2", type="source")
devtools::install_github(
repo="InfOmics/Esearch3D",
ref = "main",
dependencies = "Depends",
upgrade = "always",
quiet = T ,
type = "binary" usable only in Windows OS
devtools::install_github(
repo="InfOmics/Esearch3D",
ref = "main",
dependencies = "Depends",
upgrade = "always",
quiet = T ,
type = "binary"
)
library(Esearch3D)
setwd("C:/Users/Auxitel/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/Universidad/TFG/Esearch3D/Esearch3D")
install.packages("BiocManager")
BiocManager::install("IRanges")
devtools::install_github(
repo = "InfOmics/Esearch3D",
ref = "main",
dependencies = TRUE,
upgrade = "always",
quiet = TRUE,
type = "source"  # Cambiar a "source" si no hay binarios disponibles
)
library(Esearch3D)
install.packages("devtools")
install.packages("BiocManager")
install.packages("BiocManager")
BiocManager::install("IRanges")
install.packages("BiocManager")
BiocManager::install("IRanges")
aBiocManager::install("biomaRt")
BiocManager::install("biomaRt")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("devtools")
install.packages("htmltools", version="0.5.2", type="source")
devtools::install_github(
repo = "InfOmics/Esearch3D",
ref = "main",
dependencies = TRUE,
upgrade = "always",
quiet = TRUE,
type = "source"  # Cambiar a "source" si no hay binarios disponibles
)
library(Esearch3D)
warnings()
#Load and set up the example data ----
data("wg_data_l")
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
setwd("C:/Users/Auxitel/OneDrive - UNIVERSIDAD DE SEVILLA/Escritorio/Universidad/TFG/Esearch3D/Esearch3D/data")
#Load and set up the example data ----
data("wg_data_l")
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
#Load and set up the example data ----
data(wg_data_l.rda)
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
#Load and set up the example data ----
data("wg_data_l.rda")
#Load and set up the example data ----
data("wg_data_l")
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
devtools::install_github("InfOmics/Esearch3D")  # Instalar el paquete
force = TRUE
force = TRUE
library(Esearch3D)  # Cargar el paquete
library(Esearch3D)
devtools::install_github(
repo = "InfOmics/Esearch3D",
ref = "main",
dependencies = TRUE,
upgrade = "always",
quiet = TRUE,
type = "source"  # Cambiar a "source" si no hay binarios disponibles
)
#Load and set up the example data ----
data("wg_data_l")
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
#Load and set up the example data ----
data("wg_data_l")
#Load and set up the example data ----
load("wg_data_ll.rda")
#Load and set up the example data ----
load("wg_data_l.rda")
data("wg_data_l")
#Load and set up the example data ----
load("wg_data_l.rda")
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_ll$gf_net
#1) A two column dataframe representing the gene - fragment interaction network
gf_net = wg_data_l$gf_net
#2) A two column dataframe representing the fragment-fragment interaction network
ff_net = wg_data_l$ff_net
#3) A matrix containing the starting values of the nodes (gene node scores are given by the RNA-seq values while fragments have a starting value of 0)
input_m = wg_data_l$input_m
#4) A list of genes to annotate to the chromatin fragments
ann_net_b=wg_data_l$ann_net_b
#Two step propagation -----
#Propagation over the gene-fragment network
gf_prop = rwr_OVprop(g=gf_net,
input_m = input_m,
no_cores = 2,
r = 0.1)
#Propagation over the gene-fragment-fragment network
ff_prop=rwr_OVprop(g=ff_net,
input_m = gf_prop,
no_cores = 2,
r = 0.8)
#Create an annotated igraph object
net=create_net2plot(gf_net,
input_m,
gf_prop,
ann_net_b,
frag_pattern = "frag",
ff_net,
ff_prop)
#Start the GUI
start_GUI(net, ann_net_b)
